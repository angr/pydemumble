name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
     - master
    tags: 
     - "v**"

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: "recursive"

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: source
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { arch: arm64,    wheel: cp310-macosx_arm64,      os: macos-latest     }
          - { arch: x86_64,   wheel: cp310-macosx_x86_64,     os: macos-13         }
          - { arch: x86_64,   wheel: cp310-manylinux_x86_64,  os: ubuntu-latest    }
          - { arch: aarcrh64, wheel: cp310-manylinux_aarch64, os: ubuntu-24.04-arm }
          - { arch: x86_64,   wheel: cp310-win_amd64,         os: windows-2019     }
          - { arch: arm64,    wheel: cp311-macosx_arm64,      os: macos-latest     }
          - { arch: x86_64,   wheel: cp311-macosx_x86_64,     os: macos-13         }
          - { arch: x86_64,   wheel: cp311-manylinux_x86_64,  os: ubuntu-latest    }
          - { arch: aarch64,  wheel: cp311-manylinux_aarch64, os: ubuntu-24.04-arm }
          - { arch: x86_64,   wheel: cp311-win_amd64,         os: windows-2019     }
          - { arch: arm64,    wheel: cp312-macosx_arm64,      os: macos-latest     }
          - { arch: x86_64,   wheel: cp312-macosx_x86_64,     os: macos-13         }
          - { arch: x86_64,   wheel: cp312-manylinux_x86_64,  os: ubuntu-latest    }
          - { arch: aarch64,  wheel: cp312-manylinux_aarch64, os: ubuntu-24.04-arm }
          - { arch: x86_64,   wheel: cp312-win_amd64,         os: windows-2019     }

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: "recursive"

    - uses: pypa/cibuildwheel@v2.22

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        path: wheelhouse/*.whl
        name: ${{ matrix.wheel }}

  release:
    name: Create a new release
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    # Upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')

    steps:
    - uses: actions/setup-python@v5
    - uses: actions/download-artifact@v4
      with:
        path: dist
        merge-multiple: true

    - run: |
        mkdir dist
        find artifacts -type f -exec mv {} dist \;

    - name: Create a GitHub release
      run: gh release create --generate-notes dist/*
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - uses: pypa/gh-action-pypi-publish@release/v1.9.0
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}